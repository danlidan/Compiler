Terminals which are not used

   ERROR


State 11 conflicts: 2 shift/reduce
State 17 conflicts: 2 shift/reduce
State 67 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 154 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS error ';'

    7 feature_list: /* empty */
    8             | feature
    9             | feature_list feature

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' exp '}' ';'
   11        | OBJECTID ':' TYPEID ';'
   12        | OBJECTID ':' TYPEID ASSIGN exp ';'
   13        | error ';'

   14 formal_list: /* empty */
   15            | formal
   16            | formal_list ',' formal
   17            | error ','

   18 formal: OBJECTID ':' TYPEID

   19 branch: OBJECTID ':' TYPEID DARROW exp ';'
   20       | error ';'

   21 case_list: branch
   22          | case_list branch

   23 exps_comma: /* empty */
   24           | exp
   25           | exps_comma ',' exp
   26           | error ','

   27 exps_smcln: exp ';'
   28           | exps_smcln exp ';'
   29           | error ';'

   30 exp: OBJECTID ASSIGN exp
   31    | exp '.' OBJECTID '(' exps_comma ')'
   32    | exp '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   33    | OBJECTID '(' exps_comma ')'
   34    | IF exp THEN exp ELSE exp FI
   35    | WHILE exp LOOP exp POOL
   36    | '{' exps_smcln '}'
   37    | CASE exp OF case_list ESAC
   38    | NEW TYPEID
   39    | ISVOID exp
   40    | exp '+' exp
   41    | exp '-' exp
   42    | exp '*' exp
   43    | exp '/' exp
   44    | '~' exp
   45    | exp '<' exp
   46    | exp LE exp
   47    | exp '=' exp
   48    | NOT exp
   49    | '(' exp ')'
   50    | OBJECTID
   51    | INT_CONST
   52    | STR_CONST
   53    | BOOL_CONST
   54    | lets

   55 lets: LET OBJECTID ':' TYPEID IN exp
   56     | LET OBJECTID ':' TYPEID ASSIGN exp IN exp
   57     | LET OBJECTID ':' TYPEID lets
   58     | LET OBJECTID ':' TYPEID ASSIGN exp lets
   59     | ',' OBJECTID ':' TYPEID IN exp
   60     | ',' OBJECTID ':' TYPEID ASSIGN exp IN exp
   61     | ',' OBJECTID ':' TYPEID lets
   62     | ',' OBJECTID ':' TYPEID ASSIGN exp lets
   63     | LET error IN exp
   64     | LET error lets
   65     | ',' error lets
   66     | ',' error IN exp


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 31 32 33 49
')' (41) 10 31 32 33 49
'*' (42) 42
'+' (43) 40
',' (44) 16 17 25 26 59 60 61 62 65 66
'-' (45) 41
'.' (46) 31 32
'/' (47) 43
':' (58) 10 11 12 18 19 55 56 57 58 59 60 61 62
';' (59) 4 5 6 10 11 12 13 19 20 27 28 29
'<' (60) 45
'=' (61) 47
'@' (64) 32
'{' (123) 4 5 10 36
'}' (125) 4 5 10 36
'~' (126) 44
error (256) 6 13 17 20 26 29 63 64 65 66
CLASS (258) 4 5 6
ELSE (259) 34
FI (260) 34
IF (261) 34
IN (262) 55 56 59 60 63 66
INHERITS (263) 5
LET (264) 55 56 57 58 63 64
LOOP (265) 35
POOL (266) 35
THEN (267) 34
WHILE (268) 35
CASE (269) 37
ESAC (270) 37
OF (271) 37
DARROW (272) 19
NEW (273) 38
ISVOID (274) 39
STR_CONST (275) 52
INT_CONST (276) 51
BOOL_CONST (277) 53
TYPEID (278) 4 5 10 11 12 18 19 32 38 55 56 57 58 59 60 61 62
OBJECTID (279) 10 11 12 18 19 30 31 32 33 50 55 56 57 58 59 60 61 62
ASSIGN (280) 12 30 56 58 60 62
NOT (281) 48
LE (282) 46
ERROR (283)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
class_list (47)
    on left: 2 3, on right: 1 3
class (48)
    on left: 4 5 6, on right: 2 3
feature_list (49)
    on left: 7 8 9, on right: 4 5 9
feature (50)
    on left: 10 11 12 13, on right: 8 9
formal_list (51)
    on left: 14 15 16 17, on right: 10 16
formal (52)
    on left: 18, on right: 15 16
branch (53)
    on left: 19 20, on right: 21 22
case_list (54)
    on left: 21 22, on right: 22 37
exps_comma (55)
    on left: 23 24 25 26, on right: 25 31 32 33
exps_smcln (56)
    on left: 27 28 29, on right: 28 36
exp (57)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54, on right: 10 12 19 24 25 27 28 30 31 32 34
    35 37 39 40 41 42 43 44 45 46 47 48 49 55 56 58 59 60 62 63 66
lets (58)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66, on right: 54 57 58
    61 62 64 65


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS . error ';'

    error   shift, and go to state 5
    TYPEID  shift, and go to state 6


state 2

    0 $accept: program . $end

    $end  shift, and go to state 7


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 8


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

    6 class: CLASS error . ';'

    ';'  shift, and go to state 9


state 6

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 10
    '{'       shift, and go to state 11


state 7

    0 $accept: program $end .

    $default  accept


state 8

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 9

    6 class: CLASS error ';' .

    $default  reduce using rule 6 (class)


state 10

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 12


state 11

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14

    error     [reduce using rule 7 (feature_list)]
    OBJECTID  [reduce using rule 7 (feature_list)]
    '}'       reduce using rule 7 (feature_list)

    feature_list  go to state 15
    feature       go to state 16


state 12

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 17


state 13

   13 feature: error . ';'

    ';'  shift, and go to state 18


state 14

   10 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' exp '}' ';'
   11        | OBJECTID . ':' TYPEID ';'
   12        | OBJECTID . ':' TYPEID ASSIGN exp ';'

    '('  shift, and go to state 19
    ':'  shift, and go to state 20


state 15

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    9 feature_list: feature_list . feature

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 21

    feature  go to state 22


state 16

    8 feature_list: feature .

    $default  reduce using rule 8 (feature_list)


state 17

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14

    error     [reduce using rule 7 (feature_list)]
    OBJECTID  [reduce using rule 7 (feature_list)]
    '}'       reduce using rule 7 (feature_list)

    feature_list  go to state 23
    feature       go to state 16


state 18

   13 feature: error ';' .

    $default  reduce using rule 13 (feature)


state 19

   10 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' exp '}' ';'

    error     shift, and go to state 24
    OBJECTID  shift, and go to state 25

    ')'  reduce using rule 14 (formal_list)
    ','  reduce using rule 14 (formal_list)

    formal_list  go to state 26
    formal       go to state 27


state 20

   11 feature: OBJECTID ':' . TYPEID ';'
   12        | OBJECTID ':' . TYPEID ASSIGN exp ';'

    TYPEID  shift, and go to state 28


state 21

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 29


state 22

    9 feature_list: feature_list feature .

    $default  reduce using rule 9 (feature_list)


state 23

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    9 feature_list: feature_list . feature

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 30

    feature  go to state 22


state 24

   17 formal_list: error . ','

    ','  shift, and go to state 31


state 25

   18 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 32


state 26

   10 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' exp '}' ';'
   16 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 33
    ','  shift, and go to state 34


state 27

   15 formal_list: formal .

    $default  reduce using rule 15 (formal_list)


state 28

   11 feature: OBJECTID ':' TYPEID . ';'
   12        | OBJECTID ':' TYPEID . ASSIGN exp ';'

    ASSIGN  shift, and go to state 35
    ';'     shift, and go to state 36


state 29

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 30

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 37


state 31

   17 formal_list: error ',' .

    $default  reduce using rule 17 (formal_list)


state 32

   18 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 38


state 33

   10 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' exp '}' ';'

    ':'  shift, and go to state 39


state 34

   16 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 25

    formal  go to state 40


state 35

   12 feature: OBJECTID ':' TYPEID ASSIGN . exp ';'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 56
    lets  go to state 57


state 36

   11 feature: OBJECTID ':' TYPEID ';' .

    $default  reduce using rule 11 (feature)


state 37

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 38

   18 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 18 (formal)


state 39

   10 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' exp '}' ';'

    TYPEID  shift, and go to state 58


state 40

   16 formal_list: formal_list ',' formal .

    $default  reduce using rule 16 (formal_list)


state 41

   34 exp: IF . exp THEN exp ELSE exp FI

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 59
    lets  go to state 57


state 42

   55 lets: LET . OBJECTID ':' TYPEID IN exp
   56     | LET . OBJECTID ':' TYPEID ASSIGN exp IN exp
   57     | LET . OBJECTID ':' TYPEID lets
   58     | LET . OBJECTID ':' TYPEID ASSIGN exp lets
   63     | LET . error IN exp
   64     | LET . error lets

    error     shift, and go to state 60
    OBJECTID  shift, and go to state 61


state 43

   35 exp: WHILE . exp LOOP exp POOL

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 62
    lets  go to state 57


state 44

   37 exp: CASE . exp OF case_list ESAC

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 63
    lets  go to state 57


state 45

   38 exp: NEW . TYPEID

    TYPEID  shift, and go to state 64


state 46

   39 exp: ISVOID . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 65
    lets  go to state 57


state 47

   52 exp: STR_CONST .

    $default  reduce using rule 52 (exp)


state 48

   51 exp: INT_CONST .

    $default  reduce using rule 51 (exp)


state 49

   53 exp: BOOL_CONST .

    $default  reduce using rule 53 (exp)


state 50

   30 exp: OBJECTID . ASSIGN exp
   33    | OBJECTID . '(' exps_comma ')'
   50    | OBJECTID .

    ASSIGN  shift, and go to state 66
    '('     shift, and go to state 67

    $default  reduce using rule 50 (exp)


state 51

   48 exp: NOT . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 68
    lets  go to state 57


state 52

   49 exp: '(' . exp ')'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 69
    lets  go to state 57


state 53

   44 exp: '~' . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 70
    lets  go to state 57


state 54

   36 exp: '{' . exps_smcln '}'

    error       shift, and go to state 71
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exps_smcln  go to state 72
    exp         go to state 73
    lets        go to state 57


state 55

   59 lets: ',' . OBJECTID ':' TYPEID IN exp
   60     | ',' . OBJECTID ':' TYPEID ASSIGN exp IN exp
   61     | ',' . OBJECTID ':' TYPEID lets
   62     | ',' . OBJECTID ':' TYPEID ASSIGN exp lets
   65     | ',' . error lets
   66     | ',' . error IN exp

    error     shift, and go to state 74
    OBJECTID  shift, and go to state 75


state 56

   12 feature: OBJECTID ':' TYPEID ASSIGN exp . ';'
   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    LE   shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84
    ';'  shift, and go to state 85


state 57

   54 exp: lets .

    $default  reduce using rule 54 (exp)


state 58

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' exp '}' ';'

    '{'  shift, and go to state 86


state 59

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   34    | IF exp . THEN exp ELSE exp FI
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    THEN  shift, and go to state 87
    LE    shift, and go to state 76
    '<'   shift, and go to state 77
    '='   shift, and go to state 78
    '+'   shift, and go to state 79
    '-'   shift, and go to state 80
    '*'   shift, and go to state 81
    '/'   shift, and go to state 82
    '@'   shift, and go to state 83
    '.'   shift, and go to state 84


state 60

   63 lets: LET error . IN exp
   64     | LET error . lets

    IN   shift, and go to state 88
    LET  shift, and go to state 42
    ','  shift, and go to state 55

    lets  go to state 89


state 61

   55 lets: LET OBJECTID . ':' TYPEID IN exp
   56     | LET OBJECTID . ':' TYPEID ASSIGN exp IN exp
   57     | LET OBJECTID . ':' TYPEID lets
   58     | LET OBJECTID . ':' TYPEID ASSIGN exp lets

    ':'  shift, and go to state 90


state 62

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   35    | WHILE exp . LOOP exp POOL
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    LOOP  shift, and go to state 91
    LE    shift, and go to state 76
    '<'   shift, and go to state 77
    '='   shift, and go to state 78
    '+'   shift, and go to state 79
    '-'   shift, and go to state 80
    '*'   shift, and go to state 81
    '/'   shift, and go to state 82
    '@'   shift, and go to state 83
    '.'   shift, and go to state 84


state 63

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   37    | CASE exp . OF case_list ESAC
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    OF   shift, and go to state 92
    LE   shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84


state 64

   38 exp: NEW TYPEID .

    $default  reduce using rule 38 (exp)


state 65

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   39    | ISVOID exp .
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    '@'  shift, and go to state 83
    '.'  shift, and go to state 84

    $default  reduce using rule 39 (exp)


state 66

   30 exp: OBJECTID ASSIGN . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 93
    lets  go to state 57


state 67

   33 exp: OBJECTID '(' . exps_comma ')'

    error       shift, and go to state 94
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    ')'  reduce using rule 23 (exps_comma)
    ','  [reduce using rule 23 (exps_comma)]

    exps_comma  go to state 95
    exp         go to state 96
    lets        go to state 57


state 68

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp
   48    | NOT exp .

    LE   shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84

    $default  reduce using rule 48 (exp)


state 69

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp
   49    | '(' exp . ')'

    LE   shift, and go to state 76
    ')'  shift, and go to state 97
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84


state 70

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   44    | '~' exp .
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    '@'  shift, and go to state 83
    '.'  shift, and go to state 84

    $default  reduce using rule 44 (exp)


state 71

   29 exps_smcln: error . ';'

    ';'  shift, and go to state 98


state 72

   28 exps_smcln: exps_smcln . exp ';'
   36 exp: '{' exps_smcln . '}'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    '}'         shift, and go to state 99
    ','         shift, and go to state 55

    exp   go to state 100
    lets  go to state 57


state 73

   27 exps_smcln: exp . ';'
   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    LE   shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84
    ';'  shift, and go to state 101


state 74

   65 lets: ',' error . lets
   66     | ',' error . IN exp

    IN   shift, and go to state 102
    LET  shift, and go to state 42
    ','  shift, and go to state 55

    lets  go to state 103


state 75

   59 lets: ',' OBJECTID . ':' TYPEID IN exp
   60     | ',' OBJECTID . ':' TYPEID ASSIGN exp IN exp
   61     | ',' OBJECTID . ':' TYPEID lets
   62     | ',' OBJECTID . ':' TYPEID ASSIGN exp lets

    ':'  shift, and go to state 104


state 76

   46 exp: exp LE . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 105
    lets  go to state 57


state 77

   45 exp: exp '<' . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 106
    lets  go to state 57


state 78

   47 exp: exp '=' . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 107
    lets  go to state 57


state 79

   40 exp: exp '+' . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 108
    lets  go to state 57


state 80

   41 exp: exp '-' . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 109
    lets  go to state 57


state 81

   42 exp: exp '*' . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 110
    lets  go to state 57


state 82

   43 exp: exp '/' . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 111
    lets  go to state 57


state 83

   32 exp: exp '@' . TYPEID '.' OBJECTID '(' exps_comma ')'

    TYPEID  shift, and go to state 112


state 84

   31 exp: exp '.' . OBJECTID '(' exps_comma ')'

    OBJECTID  shift, and go to state 113


state 85

   12 feature: OBJECTID ':' TYPEID ASSIGN exp ';' .

    $default  reduce using rule 12 (feature)


state 86

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . exp '}' ';'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 114
    lets  go to state 57


state 87

   34 exp: IF exp THEN . exp ELSE exp FI

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 115
    lets  go to state 57


state 88

   63 lets: LET error IN . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 116
    lets  go to state 57


state 89

   64 lets: LET error lets .

    $default  reduce using rule 64 (lets)


state 90

   55 lets: LET OBJECTID ':' . TYPEID IN exp
   56     | LET OBJECTID ':' . TYPEID ASSIGN exp IN exp
   57     | LET OBJECTID ':' . TYPEID lets
   58     | LET OBJECTID ':' . TYPEID ASSIGN exp lets

    TYPEID  shift, and go to state 117


state 91

   35 exp: WHILE exp LOOP . exp POOL

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 118
    lets  go to state 57


state 92

   37 exp: CASE exp OF . case_list ESAC

    error     shift, and go to state 119
    OBJECTID  shift, and go to state 120

    branch     go to state 121
    case_list  go to state 122


state 93

   30 exp: OBJECTID ASSIGN exp .
   31    | exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    LE   shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84

    $default  reduce using rule 30 (exp)


state 94

   26 exps_comma: error . ','

    ','  shift, and go to state 123


state 95

   25 exps_comma: exps_comma . ',' exp
   33 exp: OBJECTID '(' exps_comma . ')'

    ')'  shift, and go to state 124
    ','  shift, and go to state 125


state 96

   24 exps_comma: exp .
   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    LE   shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84

    $default  reduce using rule 24 (exps_comma)


state 97

   49 exp: '(' exp ')' .

    $default  reduce using rule 49 (exp)


state 98

   29 exps_smcln: error ';' .

    $default  reduce using rule 29 (exps_smcln)


state 99

   36 exp: '{' exps_smcln '}' .

    $default  reduce using rule 36 (exp)


state 100

   28 exps_smcln: exps_smcln exp . ';'
   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    LE   shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84
    ';'  shift, and go to state 126


state 101

   27 exps_smcln: exp ';' .

    $default  reduce using rule 27 (exps_smcln)


state 102

   66 lets: ',' error IN . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 127
    lets  go to state 57


state 103

   65 lets: ',' error lets .

    $default  reduce using rule 65 (lets)


state 104

   59 lets: ',' OBJECTID ':' . TYPEID IN exp
   60     | ',' OBJECTID ':' . TYPEID ASSIGN exp IN exp
   61     | ',' OBJECTID ':' . TYPEID lets
   62     | ',' OBJECTID ':' . TYPEID ASSIGN exp lets

    TYPEID  shift, and go to state 128


state 105

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   46    | exp LE exp .
   47    | exp . '=' exp

    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 46 (exp)


state 106

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   45    | exp '<' exp .
   46    | exp . LE exp
   47    | exp . '=' exp

    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 45 (exp)


state 107

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp
   47    | exp '=' exp .

    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 47 (exp)


state 108

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   40    | exp '+' exp .
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84

    $default  reduce using rule 40 (exp)


state 109

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   41    | exp '-' exp .
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84

    $default  reduce using rule 41 (exp)


state 110

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   42    | exp '*' exp .
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    '@'  shift, and go to state 83
    '.'  shift, and go to state 84

    $default  reduce using rule 42 (exp)


state 111

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   43    | exp '/' exp .
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    '@'  shift, and go to state 83
    '.'  shift, and go to state 84

    $default  reduce using rule 43 (exp)


state 112

   32 exp: exp '@' TYPEID . '.' OBJECTID '(' exps_comma ')'

    '.'  shift, and go to state 129


state 113

   31 exp: exp '.' OBJECTID . '(' exps_comma ')'

    '('  shift, and go to state 130


state 114

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' exp . '}' ';'
   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    LE   shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84
    '}'  shift, and go to state 131


state 115

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   34    | IF exp THEN exp . ELSE exp FI
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    ELSE  shift, and go to state 132
    LE    shift, and go to state 76
    '<'   shift, and go to state 77
    '='   shift, and go to state 78
    '+'   shift, and go to state 79
    '-'   shift, and go to state 80
    '*'   shift, and go to state 81
    '/'   shift, and go to state 82
    '@'   shift, and go to state 83
    '.'   shift, and go to state 84


state 116

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp
   63 lets: LET error IN exp .

    $default  reduce using rule 63 (lets)


state 117

   55 lets: LET OBJECTID ':' TYPEID . IN exp
   56     | LET OBJECTID ':' TYPEID . ASSIGN exp IN exp
   57     | LET OBJECTID ':' TYPEID . lets
   58     | LET OBJECTID ':' TYPEID . ASSIGN exp lets

    IN      shift, and go to state 133
    LET     shift, and go to state 42
    ASSIGN  shift, and go to state 134
    ','     shift, and go to state 55

    lets  go to state 135


state 118

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   35    | WHILE exp LOOP exp . POOL
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    POOL  shift, and go to state 136
    LE    shift, and go to state 76
    '<'   shift, and go to state 77
    '='   shift, and go to state 78
    '+'   shift, and go to state 79
    '-'   shift, and go to state 80
    '*'   shift, and go to state 81
    '/'   shift, and go to state 82
    '@'   shift, and go to state 83
    '.'   shift, and go to state 84


state 119

   20 branch: error . ';'

    ';'  shift, and go to state 137


state 120

   19 branch: OBJECTID . ':' TYPEID DARROW exp ';'

    ':'  shift, and go to state 138


state 121

   21 case_list: branch .

    $default  reduce using rule 21 (case_list)


state 122

   22 case_list: case_list . branch
   37 exp: CASE exp OF case_list . ESAC

    error     shift, and go to state 119
    ESAC      shift, and go to state 139
    OBJECTID  shift, and go to state 120

    branch  go to state 140


state 123

   26 exps_comma: error ',' .

    $default  reduce using rule 26 (exps_comma)


state 124

   33 exp: OBJECTID '(' exps_comma ')' .

    $default  reduce using rule 33 (exp)


state 125

   25 exps_comma: exps_comma ',' . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 141
    lets  go to state 57


state 126

   28 exps_smcln: exps_smcln exp ';' .

    $default  reduce using rule 28 (exps_smcln)


state 127

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp
   66 lets: ',' error IN exp .

    $default  reduce using rule 66 (lets)


state 128

   59 lets: ',' OBJECTID ':' TYPEID . IN exp
   60     | ',' OBJECTID ':' TYPEID . ASSIGN exp IN exp
   61     | ',' OBJECTID ':' TYPEID . lets
   62     | ',' OBJECTID ':' TYPEID . ASSIGN exp lets

    IN      shift, and go to state 142
    LET     shift, and go to state 42
    ASSIGN  shift, and go to state 143
    ','     shift, and go to state 55

    lets  go to state 144


state 129

   32 exp: exp '@' TYPEID '.' . OBJECTID '(' exps_comma ')'

    OBJECTID  shift, and go to state 145


state 130

   31 exp: exp '.' OBJECTID '(' . exps_comma ')'

    error       shift, and go to state 94
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    ')'  reduce using rule 23 (exps_comma)
    ','  [reduce using rule 23 (exps_comma)]

    exps_comma  go to state 146
    exp         go to state 96
    lets        go to state 57


state 131

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' exp '}' . ';'

    ';'  shift, and go to state 147


state 132

   34 exp: IF exp THEN exp ELSE . exp FI

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 148
    lets  go to state 57


state 133

   55 lets: LET OBJECTID ':' TYPEID IN . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 149
    lets  go to state 57


state 134

   56 lets: LET OBJECTID ':' TYPEID ASSIGN . exp IN exp
   58     | LET OBJECTID ':' TYPEID ASSIGN . exp lets

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 150
    lets  go to state 57


state 135

   57 lets: LET OBJECTID ':' TYPEID lets .

    $default  reduce using rule 57 (lets)


state 136

   35 exp: WHILE exp LOOP exp POOL .

    $default  reduce using rule 35 (exp)


state 137

   20 branch: error ';' .

    $default  reduce using rule 20 (branch)


state 138

   19 branch: OBJECTID ':' . TYPEID DARROW exp ';'

    TYPEID  shift, and go to state 151


state 139

   37 exp: CASE exp OF case_list ESAC .

    $default  reduce using rule 37 (exp)


state 140

   22 case_list: case_list branch .

    $default  reduce using rule 22 (case_list)


state 141

   25 exps_comma: exps_comma ',' exp .
   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    LE   shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84

    $default  reduce using rule 25 (exps_comma)


state 142

   59 lets: ',' OBJECTID ':' TYPEID IN . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 152
    lets  go to state 57


state 143

   60 lets: ',' OBJECTID ':' TYPEID ASSIGN . exp IN exp
   62     | ',' OBJECTID ':' TYPEID ASSIGN . exp lets

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 153
    lets  go to state 57


state 144

   61 lets: ',' OBJECTID ':' TYPEID lets .

    $default  reduce using rule 61 (lets)


state 145

   32 exp: exp '@' TYPEID '.' OBJECTID . '(' exps_comma ')'

    '('  shift, and go to state 154


state 146

   25 exps_comma: exps_comma . ',' exp
   31 exp: exp '.' OBJECTID '(' exps_comma . ')'

    ')'  shift, and go to state 155
    ','  shift, and go to state 125


state 147

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' exp '}' ';' .

    $default  reduce using rule 10 (feature)


state 148

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   34    | IF exp THEN exp ELSE exp . FI
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    FI   shift, and go to state 156
    LE   shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84


state 149

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp
   55 lets: LET OBJECTID ':' TYPEID IN exp .

    $default  reduce using rule 55 (lets)


state 150

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp
   56 lets: LET OBJECTID ':' TYPEID ASSIGN exp . IN exp
   58     | LET OBJECTID ':' TYPEID ASSIGN exp . lets

    IN   shift, and go to state 157
    LET  shift, and go to state 42
    LE   shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84
    ','  shift, and go to state 55

    lets  go to state 158


state 151

   19 branch: OBJECTID ':' TYPEID . DARROW exp ';'

    DARROW  shift, and go to state 159


state 152

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp
   59 lets: ',' OBJECTID ':' TYPEID IN exp .

    $default  reduce using rule 59 (lets)


state 153

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp
   60 lets: ',' OBJECTID ':' TYPEID ASSIGN exp . IN exp
   62     | ',' OBJECTID ':' TYPEID ASSIGN exp . lets

    IN   shift, and go to state 160
    LET  shift, and go to state 42
    LE   shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84
    ','  shift, and go to state 55

    lets  go to state 161


state 154

   32 exp: exp '@' TYPEID '.' OBJECTID '(' . exps_comma ')'

    error       shift, and go to state 94
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    ')'  reduce using rule 23 (exps_comma)
    ','  [reduce using rule 23 (exps_comma)]

    exps_comma  go to state 162
    exp         go to state 96
    lets        go to state 57


state 155

   31 exp: exp '.' OBJECTID '(' exps_comma ')' .

    $default  reduce using rule 31 (exp)


state 156

   34 exp: IF exp THEN exp ELSE exp FI .

    $default  reduce using rule 34 (exp)


state 157

   56 lets: LET OBJECTID ':' TYPEID ASSIGN exp IN . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 163
    lets  go to state 57


state 158

   58 lets: LET OBJECTID ':' TYPEID ASSIGN exp lets .

    $default  reduce using rule 58 (lets)


state 159

   19 branch: OBJECTID ':' TYPEID DARROW . exp ';'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 164
    lets  go to state 57


state 160

   60 lets: ',' OBJECTID ':' TYPEID ASSIGN exp IN . exp

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '('         shift, and go to state 52
    '~'         shift, and go to state 53
    '{'         shift, and go to state 54
    ','         shift, and go to state 55

    exp   go to state 165
    lets  go to state 57


state 161

   62 lets: ',' OBJECTID ':' TYPEID ASSIGN exp lets .

    $default  reduce using rule 62 (lets)


state 162

   25 exps_comma: exps_comma . ',' exp
   32 exp: exp '@' TYPEID '.' OBJECTID '(' exps_comma . ')'

    ')'  shift, and go to state 166
    ','  shift, and go to state 125


state 163

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp
   56 lets: LET OBJECTID ':' TYPEID ASSIGN exp IN exp .

    $default  reduce using rule 56 (lets)


state 164

   19 branch: OBJECTID ':' TYPEID DARROW exp . ';'
   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp

    LE   shift, and go to state 76
    '<'  shift, and go to state 77
    '='  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82
    '@'  shift, and go to state 83
    '.'  shift, and go to state 84
    ';'  shift, and go to state 167


state 165

   31 exp: exp . '.' OBJECTID '(' exps_comma ')'
   32    | exp . '@' TYPEID '.' OBJECTID '(' exps_comma ')'
   40    | exp . '+' exp
   41    | exp . '-' exp
   42    | exp . '*' exp
   43    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . LE exp
   47    | exp . '=' exp
   60 lets: ',' OBJECTID ':' TYPEID ASSIGN exp IN exp .

    $default  reduce using rule 60 (lets)


state 166

   32 exp: exp '@' TYPEID '.' OBJECTID '(' exps_comma ')' .

    $default  reduce using rule 32 (exp)


state 167

   19 branch: OBJECTID ':' TYPEID DARROW exp ';' .

    $default  reduce using rule 19 (branch)
